#!/bin/bash


sudo apt-get update
sudo apt-get install -y nginx
sudo apt-get install -y php php-fpm php-mysql

cat <<EOF >/etc/nginx/sites-enabled/default
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files \$uri \$uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
         location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        }
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files \$uri \$uri/ =404;
#       }
#}
EOF

rm /var/www/html/*
service nginx reload
cat <<EOF > /var/www/html/cake.php
<?php

function pieceCake(){
        echo "CYBERHUB{H4ppy_H4ck!ng_My_Fr!nD_:)}";

}


?>
EOF

cat <<EOF >/var/www/html/index.php
<!DOCTYPE html>
<html>
<head>
        <title>pieceCake</title>

</head>
<body>


<?php

include('cake.php');
highlight_file( __FILE__ );
if(!isset(\$_COOKIE['whoami'])) {SetCookie("whoami","0","/"); }

if(!is_numeric(\$_COOKIE['whoami'])){
        \$_COOKIE['whoami'] = 0;
}


if(\$_COOKIE['whoami'] != 296 && \$_COOKIE['whoami'] != 297) {
        if(strlen(\$_COOKIE['whoami']) === 3){
                if (\$_COOKIE['whoami'] > 296 ) {
                        # code...
                        pieceCake();
                }

        }
}


?>

</body>
</html> 

EOF
